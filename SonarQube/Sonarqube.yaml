#Postgres
apiVersion: v1
kind: ConfigMap
metadata:
  name: postgres
  namespace: devops-tools
  labels:
    app: postgres
data:
  POSTGRESQL_USERNAME: sonar_user
  POSTGRESQL_DATABASE: sonar_db
  POSTGRESQL_PASSWORD: S0N4RQUB3

---
#Volumes
---
kind: StorageClass
apiVersion: storage.k8s.io/v1
metadata:
  name: local-storage
provisioner: kubernetes.io/no-provisioner
volumeBindingMode: WaitForFirstConsumer

#Persistent Volume
---
apiVersion: v1
kind: PersistentVolume
metadata:
  name: postgres-pv-volume
  labels:
    type: local
spec:
  storageClassName: local-storage
  claimRef:
    name: postgres-pv-claim
    namespace: devops-tools
  capacity:
    storage: 10Gi
  accessModes:
    - ReadWriteMany
  local:
    path: "/home/data/sonarqube:Z"
  nodeAffinity:
    required:
      nodeSelectorTerms:
      - matchExpressions:
        - key: kubernetes.io/hostname
          operator: In
          values:
          - kind-worker
#Persistent Volume Claim
---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: postgres-pv-claim
  namespace: devops-tools
spec:
  storageClassName: local-storage
  accessModes:
    - ReadWriteMany
  resources:
    requests:
      storage: 10Gi

#Service
---
apiVersion: v1
kind: Service
metadata:
  name: postgres
  namespace: devops-tools
  labels:
    app: postgres
spec:
  ports:
  - port: 5432
    name: postgres
  selector:
    app: postgres

#Deployment
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: postgres
  namespace: devops-tools
  labels:
    app: postgres
spec:
  replicas: 1
  selector:
    matchLabels:
      app: postgres
  template:
    metadata:
      labels:
        app: postgres
    spec:
      securityContext:
        fsGroup: 2000 
      containers:
      - name: postgres
        image: postgres:13.3
        imagePullPolicy: IfNotPresent
        ports:
        - containerPort: 5432
        env:
        - name: ALLOW_EMPTY_PASSWORD
          value: "yes"
        envFrom:
        - configMapRef:
            name: postgres
        volumeMounts:
        - name: postgres
          mountPath: /var/lib/pgsql/data
      volumes:
          - name: postgres
            persistentVolumeClaim:
              claimName: postgres-pv-claim

