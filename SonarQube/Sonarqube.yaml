apiVersion: v1
kind: ConfigMap
metadata:
  name: postgres-config
  namespace: devops-tools
  labels:
    app: sonar-postgres
data:
  POSTGRES_USERNAME: "sonar_user"
  POSTGRES_DATABASE: "sonar_db"
  POSTGRES_PASSWORD: "S0N4RQUB3"
---
# StatefulSet Postgres Database
apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: sonar-postgres-dep
  namespace: devops-tools
  labels:
    app: sonar-postgres
spec:
  replicas: 1
  selector:
    matchLabels:
      app: sonar-postgres
  template:
    metadata:
      name: sonar-postgres-dep
      labels:
        app: sonar-postgres
    spec:
      securityContext:
        fsGroup: 2000 
      containers:
        - image: postgres:latest
          name: sonar-postgres
          env:
            - name: ALLOW_EMPTY_PASSWORD
              value: "yes"
          envFrom:
            - configMapRef:
                name: postgres-config
          ports:
            - containerPort: 5432
              name: postgresport
          volumeMounts:
            - name: data-disk
              mountPath: /var/lib/postgresql/data
          livenessProbe:
            exec:
              command:
              - /bin/sh
              - -c
              - exec pg_isready -U "postgres" -h 127.0.0.1 -p 5432
            failureThreshold: 6
            initialDelaySeconds: 30
            periodSeconds: 10
            successThreshold: 1
            timeoutSeconds: 5
      volumes:
        - name: data-disk
          persistentVolumeClaim:
            claimName: sonar-postgres-pvc

#Service for Postgres Database            
---
apiVersion: v1
kind: Service
metadata:
  namespace: devops-tools
  name: sonar-postgres
  labels:
    app: sonar-postgres
spec:
  selector:
    app: sonar-postgres
  ports:
    - port: 5432

#Volumes
---
kind: StorageClass
apiVersion: storage.k8s.io/v1
metadata:
  name: local-storage
provisioner: kubernetes.io/no-provisioner
volumeBindingMode: WaitForFirstConsumer

#Persistent Volume and Persistent Volume Claim for Postgres Database
---
kind: PersistentVolume
apiVersion: v1
metadata:
  namespace: devops-tools
  name: sonar-postgres-pv
  labels:
    type: local
    app: sonar-postgres
spec:
  storageClassName: local-storage
  claimRef:
    name: sonar-postgres-pvc
    namespace: devops-tools
  capacity:
    storage: 10Gi
  accessModes:
    - ReadWriteMany
  local:
    path: /home/data/sonar-postgres
  nodeAffinity:
    required:
      nodeSelectorTerms:
      - matchExpressions:
        - key: kubernetes.io/hostname
          operator: In
          values:
          - kind-worker
---
kind: PersistentVolumeClaim
apiVersion: v1
metadata:
  namespace: devops-tools
  name: sonar-postgres-pvc
spec:
  accessModes:
    - ReadWriteMany
  storageClassName: local-storage
  resources:
    requests:
      storage: 10Gi

#SonarQube ConfigMap
---
apiVersion: v1
kind: ConfigMap
metadata:
  name: sonar-config
  namespace: devops-tools
  labels:
    app: sonarqube
data:
  SONARQUBE_JDBC_URL: "jdbc:postgresql://sonar-postgres.devops-tools.svc.cluster.local:5432/sonar_db"
  SONARQUBE_JDBC_USERNAME: "sonar_user"
  SONARQUBE_JDBC_PASSWORD: "S0N4RQUB3"
  JAVA_OPTS: "-Duser.timezone=Asia/Kolkata -Xmx2048m"

#SonarQube Deployment and Service
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: sonarqube
  namespace: devops-tools
spec:
  replicas: 1
  strategy:
    type: Recreate
  selector:
    matchLabels:
      app: sonarqube
  template:
    metadata:
      name: sonarqube
      labels:
        app: sonarqube
    spec:
      securityContext:
        fsGroup: 1000
        runAsUser: 1000
        runAsGroup: 1000
      initContainers:
      - name: init
        image: busybox
        command:
        - sysctl
        - -w
        - vm.max_map_count=262144
        - fs.file-max=65536
        imagePullPolicy: IfNotPresent
        securityContext:
            privileged: true
            allowPrivilegeEscalation: true
      containers:
      - image: sonarqube:community
        args:
        - -Dsonar.web.context=/sonar
        name: sonarqube
        envFrom:
        - configMapRef:
            name: sonar-config
        ports:
        - containerPort: 9000
        securityContext:
            privileged: true
        volumeMounts:
          - name: data-disk
            mountPath: /opt/sonarqube
      volumes:
        - name: data-disk
          persistentVolumeClaim:
            claimName: sonar-pvc

#Service for SonarQube
---
apiVersion: v1
kind: Service
metadata:
  namespace: devops-tools
  name: sonarqube-service
spec:
  type: NodePort
  selector:
    app: sonarqube
  ports:
    - port: 9000
      nodePort: 31002

#Persistent Volume and Persistent Volume Claim for SonarQube
---
kind: PersistentVolume
apiVersion: v1
metadata:
  namespace: devops-tools
  name: sonar-pv
  labels:
    type: local
    app: sonarqube
spec:
  storageClassName: local-storage
  claimRef:
    name: sonar-pvc
    namespace: devops-tools
  capacity:
    storage: 1Gi
  accessModes:
    - ReadWriteMany
  local:
    path: /home/data/sonar
  nodeAffinity:
    required:
      nodeSelectorTerms:
      - matchExpressions:
        - key: kubernetes.io/hostname
          operator: In
          values:
          - kind-worker

---
kind: PersistentVolumeClaim
apiVersion: v1
metadata:
  namespace: devops-tools
  name: sonar-pvc
spec:
  accessModes:
    - ReadWriteMany
  storageClassName: local-storage
  resources:
    requests:
      storage: 1Gi